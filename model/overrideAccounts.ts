/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.64.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { AccountSubtype } from './accountSubtype';
import { HoldingsOverride } from './holdingsOverride';
import { IncomeOverride } from './incomeOverride';
import { InflowModel } from './inflowModel';
import { InvestmentsTransactionsOverride } from './investmentsTransactionsOverride';
import { LiabilityOverride } from './liabilityOverride';
import { Meta } from './meta';
import { Numbers } from './numbers';
import { OverrideAccountType } from './overrideAccountType';
import { OwnerOverride } from './ownerOverride';
import { TransactionOverride } from './transactionOverride';

/**
* Data to use to set values of test accounts. Some values cannot be specified in the schema and will instead will be calculated from other test data in order to achieve more consistent, realistic test data.
*/
export class OverrideAccounts extends null<String, any> {
    'type': OverrideAccountType;
    'subtype': AccountSubtype | null;
    /**
    * If provided, the account will start with this amount as the current balance. 
    */
    'startingBalance': number;
    /**
    * If provided, the account will always have this amount as its  available balance, regardless of current balance or changes in transactions over time.
    */
    'forceAvailableBalance': number;
    /**
    * ISO-4217 currency code. If provided, the account will be denominated in the given currency. Transactions will also be in this currency by default.
    */
    'currency': string;
    'meta': Meta;
    'numbers': Numbers;
    /**
    * Specify the list of transactions on the account.
    */
    'transactions': Array<TransactionOverride>;
    'holdings'?: HoldingsOverride;
    'investmentTransactions'?: InvestmentsTransactionsOverride;
    'identity': OwnerOverride;
    'liability': LiabilityOverride;
    'inflowModel': InflowModel;
    'income'?: IncomeOverride;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "type",
            "baseName": "type",
            "type": "OverrideAccountType"
        },
        {
            "name": "subtype",
            "baseName": "subtype",
            "type": "AccountSubtype"
        },
        {
            "name": "startingBalance",
            "baseName": "starting_balance",
            "type": "number"
        },
        {
            "name": "forceAvailableBalance",
            "baseName": "force_available_balance",
            "type": "number"
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "string"
        },
        {
            "name": "meta",
            "baseName": "meta",
            "type": "Meta"
        },
        {
            "name": "numbers",
            "baseName": "numbers",
            "type": "Numbers"
        },
        {
            "name": "transactions",
            "baseName": "transactions",
            "type": "Array<TransactionOverride>"
        },
        {
            "name": "holdings",
            "baseName": "holdings",
            "type": "HoldingsOverride"
        },
        {
            "name": "investmentTransactions",
            "baseName": "investment_transactions",
            "type": "InvestmentsTransactionsOverride"
        },
        {
            "name": "identity",
            "baseName": "identity",
            "type": "OwnerOverride"
        },
        {
            "name": "liability",
            "baseName": "liability",
            "type": "LiabilityOverride"
        },
        {
            "name": "inflowModel",
            "baseName": "inflow_model",
            "type": "InflowModel"
        },
        {
            "name": "income",
            "baseName": "income",
            "type": "IncomeOverride"
        }    ];

    static getAttributeTypeMap() {
        return super.getAttributeTypeMap().concat(OverrideAccounts.attributeTypeMap);
    }
}

