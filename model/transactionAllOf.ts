/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.64.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { PersonalFinanceCategory } from './personalFinanceCategory';
import { TransactionCode } from './transactionCode';

export class TransactionAllOf {
    /**
    * The channel used to make a payment. `online:` transactions that took place online.  `in store:` transactions that were made at a physical location.  `other:` transactions that relate to banks, e.g. fees or deposits.  This field replaces the `transaction_type` field. 
    */
    'paymentChannel': TransactionAllOf.PaymentChannelEnum;
    /**
    * The date that the transaction was authorized. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ( `YYYY-MM-DD` ). The `authorized_date` field uses machine learning to determine a transaction date for transactions where the `date_transacted` is not available. If the `date_transacted` field is present and not `null`, the `authorized_date` field will have the same value as the `date_transacted` field.
    */
    'authorizedDate': string | null;
    /**
    * Date and time when a transaction was authorized in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ( `YYYY-MM-DDTHH:mm:ssZ` ).  This field is returned for select financial institutions and comes as provided by the institution. It may contain default time values (such as 00:00:00).
    */
    'authorizedDatetime': Date | null;
    /**
    * Date and time when a transaction was posted in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ( `YYYY-MM-DDTHH:mm:ssZ` ).  This field is returned for select financial institutions and comes as provided by the institution. It may contain default time values (such as 00:00:00).
    */
    'datetime': Date | null;
    'transactionCode': TransactionCode | null;
    'personalFinanceCategory'?: PersonalFinanceCategory & any | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "paymentChannel",
            "baseName": "payment_channel",
            "type": "TransactionAllOf.PaymentChannelEnum"
        },
        {
            "name": "authorizedDate",
            "baseName": "authorized_date",
            "type": "string"
        },
        {
            "name": "authorizedDatetime",
            "baseName": "authorized_datetime",
            "type": "Date"
        },
        {
            "name": "datetime",
            "baseName": "datetime",
            "type": "Date"
        },
        {
            "name": "transactionCode",
            "baseName": "transaction_code",
            "type": "TransactionCode"
        },
        {
            "name": "personalFinanceCategory",
            "baseName": "personal_finance_category",
            "type": "PersonalFinanceCategory & any"
        }    ];

    static getAttributeTypeMap() {
        return TransactionAllOf.attributeTypeMap;
    }
}

export namespace TransactionAllOf {
    export enum PaymentChannelEnum {
        Online = <any> 'online',
        InStore = <any> 'in store',
        Other = <any> 'other'
    }
}
