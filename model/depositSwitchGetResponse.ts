/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.64.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* DepositSwitchGetResponse defines the response schema for `/deposit_switch/get`
*/
export class DepositSwitchGetResponse extends null<String, any> {
    /**
    * The ID of the deposit switch.
    */
    'depositSwitchId': string;
    /**
    * The ID of the bank account the direct deposit was switched to.
    */
    'targetAccountId': string | null;
    /**
    * The ID of the Item the direct deposit was switched to.
    */
    'targetItemId': string | null;
    /**
    *  The state, or status, of the deposit switch.  - `initialized` – The deposit switch has been initialized with the user entering the information required to submit the deposit switch request.  - `processing` – The deposit switch request has been submitted and is being processed.  - `completed` – The user\'s employer has fulfilled the deposit switch request.  - `error` – There was an error processing the deposit switch request.
    */
    'state': DepositSwitchGetResponse.StateEnum;
    /**
    * The method used to make the deposit switch.  - `instant` – User instantly switched their direct deposit to a new or existing bank account by connecting their payroll or employer account.  - `mail` – User requested that Plaid contact their employer by mail to make the direct deposit switch.  - `pdf` – User generated a PDF or email to be sent to their employer with the information necessary to make the deposit switch.\'
    */
    'switchMethod'?: DepositSwitchGetResponse.SwitchMethodEnum;
    /**
    * When `true`, user’s direct deposit goes to multiple banks. When false, user’s direct deposit only goes to the target account. Always `null` if the deposit switch has not been completed.
    */
    'accountHasMultipleAllocations': boolean | null;
    /**
    * When `true`, the target account is allocated the remainder of direct deposit after all other allocations have been deducted. When `false`, user’s direct deposit is allocated as a percent or amount. Always `null` if the deposit switch has not been completed.
    */
    'isAllocatedRemainder': boolean | null;
    /**
    * The percentage of direct deposit allocated to the target account. Always `null` if the target account is not allocated a percentage or if the deposit switch has not been completed or if `is_allocated_remainder` is true.
    */
    'percentAllocated': number | null;
    /**
    * The dollar amount of direct deposit allocated to the target account. Always `null` if the target account is not allocated an amount or if the deposit switch has not been completed.
    */
    'amountAllocated': number | null;
    /**
    * The name of the employer selected by the user. If the user did not select an employer, the value returned is `null`.
    */
    'employerName'?: string | null;
    /**
    * The ID of the employer selected by the user. If the user did not select an employer, the value returned is `null`.
    */
    'employerId'?: string | null;
    /**
    * The name of the institution selected by the user. If the user did not select an institution, the value returned is `null`.
    */
    'institutionName'?: string | null;
    /**
    * The ID of the institution selected by the user. If the user did not select an institution, the value returned is `null`.
    */
    'institutionId'?: string | null;
    /**
    * [ISO 8601](https://wikipedia.org/wiki/ISO_8601) date the deposit switch was created. 
    */
    'dateCreated': string;
    /**
    * [ISO 8601](https://wikipedia.org/wiki/ISO_8601) date the deposit switch was completed. Always `null` if the deposit switch has not been completed. 
    */
    'dateCompleted': string | null;
    /**
    * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
    */
    'requestId': string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "depositSwitchId",
            "baseName": "deposit_switch_id",
            "type": "string"
        },
        {
            "name": "targetAccountId",
            "baseName": "target_account_id",
            "type": "string"
        },
        {
            "name": "targetItemId",
            "baseName": "target_item_id",
            "type": "string"
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "DepositSwitchGetResponse.StateEnum"
        },
        {
            "name": "switchMethod",
            "baseName": "switch_method",
            "type": "DepositSwitchGetResponse.SwitchMethodEnum"
        },
        {
            "name": "accountHasMultipleAllocations",
            "baseName": "account_has_multiple_allocations",
            "type": "boolean"
        },
        {
            "name": "isAllocatedRemainder",
            "baseName": "is_allocated_remainder",
            "type": "boolean"
        },
        {
            "name": "percentAllocated",
            "baseName": "percent_allocated",
            "type": "number"
        },
        {
            "name": "amountAllocated",
            "baseName": "amount_allocated",
            "type": "number"
        },
        {
            "name": "employerName",
            "baseName": "employer_name",
            "type": "string"
        },
        {
            "name": "employerId",
            "baseName": "employer_id",
            "type": "string"
        },
        {
            "name": "institutionName",
            "baseName": "institution_name",
            "type": "string"
        },
        {
            "name": "institutionId",
            "baseName": "institution_id",
            "type": "string"
        },
        {
            "name": "dateCreated",
            "baseName": "date_created",
            "type": "string"
        },
        {
            "name": "dateCompleted",
            "baseName": "date_completed",
            "type": "string"
        },
        {
            "name": "requestId",
            "baseName": "request_id",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return super.getAttributeTypeMap().concat(DepositSwitchGetResponse.attributeTypeMap);
    }
}

export namespace DepositSwitchGetResponse {
    export enum StateEnum {
        Initialized = <any> 'initialized',
        Processing = <any> 'processing',
        Completed = <any> 'completed',
        Error = <any> 'error'
    }
    export enum SwitchMethodEnum {
        Instant = <any> 'instant',
        Mail = <any> 'mail',
        Pdf = <any> 'pdf',
        Null = <any> 'null'
    }
}
