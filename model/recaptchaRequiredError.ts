/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.64.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* The request was flagged by Plaid\'s fraud system, and requires additional verification to ensure they are not a bot.
*/
export class RecaptchaRequiredError extends null<String, any> {
    /**
    * RECAPTCHA_ERROR
    */
    'errorType': string;
    /**
    * RECAPTCHA_REQUIRED
    */
    'errorCode': string;
    'displayMessage': string;
    /**
    * 400
    */
    'httpCode': string;
    /**
    * Your user will be prompted to solve a Google reCAPTCHA challenge in the Link Recaptcha pane. If they solve the challenge successfully, the user\'s request is resubmitted and they are directed to the next Item creation step.
    */
    'linkUserExperience': string;
    /**
    * Plaid\'s fraud system detects abusive traffic and considers a variety of parameters throughout Item creation requests. When a request is considered risky or possibly fraudulent, Link presents a reCAPTCHA for the user to solve.
    */
    'commonCauses': string;
    /**
    * Link will automatically guide your user through reCAPTCHA verification. As a general rule, we recommend instrumenting basic fraud monitoring to detect and protect your website from spam and abuse.  If your user cannot verify their session, please submit a Support ticket with the following identifiers: `link_session_id` or `request_id`
    */
    'troubleshootingSteps': string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "errorType",
            "baseName": "error_type",
            "type": "string"
        },
        {
            "name": "errorCode",
            "baseName": "error_code",
            "type": "string"
        },
        {
            "name": "displayMessage",
            "baseName": "display_message",
            "type": "string"
        },
        {
            "name": "httpCode",
            "baseName": "http_code",
            "type": "string"
        },
        {
            "name": "linkUserExperience",
            "baseName": "link_user_experience",
            "type": "string"
        },
        {
            "name": "commonCauses",
            "baseName": "common_causes",
            "type": "string"
        },
        {
            "name": "troubleshootingSteps",
            "baseName": "troubleshooting_steps",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return super.getAttributeTypeMap().concat(RecaptchaRequiredError.attributeTypeMap);
    }
}

