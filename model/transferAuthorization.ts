/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.64.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { TransferAuthorizationDecisionRationale } from './transferAuthorizationDecisionRationale';
import { TransferAuthorizationGuaranteeDecision } from './transferAuthorizationGuaranteeDecision';
import { TransferAuthorizationGuaranteeDecisionRationale } from './transferAuthorizationGuaranteeDecisionRationale';
import { TransferAuthorizationProposedTransfer } from './transferAuthorizationProposedTransfer';

/**
* Contains the authorization decision for a proposed transfer
*/
export class TransferAuthorization extends null<String, any> {
    /**
    * Plaid’s unique identifier for a transfer authorization.
    */
    'id': string;
    /**
    * The datetime representing when the authorization was created, in the format `2006-01-02T15:04:05Z`.
    */
    'created': Date;
    /**
    *  A decision regarding the proposed transfer.  `approved` – The proposed transfer has received the end user\'s consent and has been approved for processing. Plaid has also reviewed the proposed transfer and has approved it for processing.   `permitted` – Plaid was unable to fetch the information required to approve or decline the proposed transfer. You may proceed with the transfer, but further review is recommended. Plaid is awaiting further instructions from the client.  `declined` – Plaid reviewed the proposed transfer and declined processing. Refer to the `code` field in the `decision_rationale` object for details.
    */
    'decision': TransferAuthorization.DecisionEnum;
    'decisionRationale': TransferAuthorizationDecisionRationale | null;
    'guaranteeDecision': TransferAuthorizationGuaranteeDecision | null;
    'guaranteeDecisionRationale': TransferAuthorizationGuaranteeDecisionRationale | null;
    'proposedTransfer': TransferAuthorizationProposedTransfer;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "created",
            "baseName": "created",
            "type": "Date"
        },
        {
            "name": "decision",
            "baseName": "decision",
            "type": "TransferAuthorization.DecisionEnum"
        },
        {
            "name": "decisionRationale",
            "baseName": "decision_rationale",
            "type": "TransferAuthorizationDecisionRationale"
        },
        {
            "name": "guaranteeDecision",
            "baseName": "guarantee_decision",
            "type": "TransferAuthorizationGuaranteeDecision"
        },
        {
            "name": "guaranteeDecisionRationale",
            "baseName": "guarantee_decision_rationale",
            "type": "TransferAuthorizationGuaranteeDecisionRationale"
        },
        {
            "name": "proposedTransfer",
            "baseName": "proposed_transfer",
            "type": "TransferAuthorizationProposedTransfer"
        }    ];

    static getAttributeTypeMap() {
        return super.getAttributeTypeMap().concat(TransferAuthorization.attributeTypeMap);
    }
}

export namespace TransferAuthorization {
    export enum DecisionEnum {
        Approved = <any> 'approved',
        Permitted = <any> 'permitted',
        Declined = <any> 'declined'
    }
}
