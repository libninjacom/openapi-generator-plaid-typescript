/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.64.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* The schema below describes the various `types` and corresponding `subtypes` that Plaid recognizes and reports for financial institution accounts.
*/
export class StandaloneAccountType extends null<String, any> {
    /**
    * An account type holding cash, in which funds are deposited. Supported products for `depository` accounts are: Auth (`checking` and `savings` types only), Balance, Transactions, Identity, Payment Initiation, and Assets.
    */
    'depository': string;
    /**
    * A credit card type account. Supported products for `credit` accounts are: Balance, Transactions, Identity, and Liabilities.
    */
    'credit': string;
    /**
    * A loan type account. Supported products for `loan` accounts are: Balance, Liabilities, and Transactions.
    */
    'loan': string;
    /**
    * An investment account. Supported products for `investment` accounts are: Balance and Investments. In API versions 2018-05-22 and earlier, this type is called `brokerage`.
    */
    'investment': string;
    /**
    * Other or unknown account type. Supported products for `other` accounts are: Balance, Transactions, Identity, and Assets.
    */
    'other': string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "depository",
            "baseName": "depository",
            "type": "string"
        },
        {
            "name": "credit",
            "baseName": "credit",
            "type": "string"
        },
        {
            "name": "loan",
            "baseName": "loan",
            "type": "string"
        },
        {
            "name": "investment",
            "baseName": "investment",
            "type": "string"
        },
        {
            "name": "other",
            "baseName": "other",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return super.getAttributeTypeMap().concat(StandaloneAccountType.attributeTypeMap);
    }
}

