/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.64.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { TransferEventType } from './transferEventType';

/**
* Defines the request schema for `/transfer/event/list`
*/
export class TransferEventListRequest {
    /**
    * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
    */
    'clientId'?: string;
    /**
    * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
    */
    'secret'?: string;
    /**
    * The start datetime of transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
    */
    'startDate'?: Date | null;
    /**
    * The end datetime of transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
    */
    'endDate'?: Date | null;
    /**
    * Plaid’s unique identifier for a transfer.
    */
    'transferId'?: string | null;
    /**
    * The account ID to get events for all transactions to/from an account.
    */
    'accountId'?: string | null;
    /**
    * The type of transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into your origination account; a `credit` indicates a transfer of money out of your origination account.
    */
    'transferType'?: TransferEventListRequest.TransferTypeEnum;
    /**
    * Filter events by event type.
    */
    'eventTypes'?: Array<TransferEventType>;
    /**
    * Plaid’s unique identifier for a sweep.
    */
    'sweepId'?: string;
    /**
    * The maximum number of transfer events to return. If the number of events matching the above parameters is greater than `count`, the most recent events will be returned.
    */
    'count'?: number | null = 25;
    /**
    * The offset into the list of transfer events. When `count`=25 and `offset`=0, the first 25 events will be returned. When `count`=25 and `offset`=25, the next 25 bank transfer events will be returned.
    */
    'offset'?: number | null = 0;
    /**
    * The origination account ID to get events for transfers from a specific origination account.
    */
    'originationAccountId'?: string | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "clientId",
            "baseName": "client_id",
            "type": "string"
        },
        {
            "name": "secret",
            "baseName": "secret",
            "type": "string"
        },
        {
            "name": "startDate",
            "baseName": "start_date",
            "type": "Date"
        },
        {
            "name": "endDate",
            "baseName": "end_date",
            "type": "Date"
        },
        {
            "name": "transferId",
            "baseName": "transfer_id",
            "type": "string"
        },
        {
            "name": "accountId",
            "baseName": "account_id",
            "type": "string"
        },
        {
            "name": "transferType",
            "baseName": "transfer_type",
            "type": "TransferEventListRequest.TransferTypeEnum"
        },
        {
            "name": "eventTypes",
            "baseName": "event_types",
            "type": "Array<TransferEventType>"
        },
        {
            "name": "sweepId",
            "baseName": "sweep_id",
            "type": "string"
        },
        {
            "name": "count",
            "baseName": "count",
            "type": "number"
        },
        {
            "name": "offset",
            "baseName": "offset",
            "type": "number"
        },
        {
            "name": "originationAccountId",
            "baseName": "origination_account_id",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return TransferEventListRequest.attributeTypeMap;
    }
}

export namespace TransferEventListRequest {
    export enum TransferTypeEnum {
        Debit = <any> 'debit',
        Credit = <any> 'credit',
        Null = <any> 'null'
    }
}
