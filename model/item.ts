/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.64.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { Products } from './products';

/**
* Metadata about the Item.
*/
export class Item extends null<String, any> {
    /**
    * The Plaid Item ID. The `item_id` is always unique; linking the same account at the same institution twice will result in two Items with different `item_id` values. Like all Plaid identifiers, the `item_id` is case-sensitive.
    */
    'itemId': string;
    /**
    * The Plaid Institution ID associated with the Item. Field is `null` for Items created via Same Day Micro-deposits.
    */
    'institutionId'?: string | null;
    /**
    * The URL registered to receive webhooks for the Item.
    */
    'webhook': string | null;
    'error': Error | null;
    /**
    * A list of products available for the Item that have not yet been accessed.
    */
    'availableProducts': Array<Products>;
    /**
    * A list of products that have been billed for the Item. Note - `billed_products` is populated in all environments but only requests in Production are billed. 
    */
    'billedProducts': Array<Products>;
    /**
    * A list of authorized products for the Item. 
    */
    'products'?: Array<Products>;
    /**
    * The RFC 3339 timestamp after which the consent provided by the end user will expire. Upon consent expiration, the item will enter the `ITEM_LOGIN_REQUIRED` error state. To circumvent the `ITEM_LOGIN_REQUIRED` error and maintain continuous consent, the end user can reauthenticate via Linkâ€™s update mode in advance of the consent expiration time.  Note - This is only relevant for certain OAuth-based institutions. For all other institutions, this field will be null. 
    */
    'consentExpirationTime': Date | null;
    /**
    * Indicates whether an Item requires user interaction to be updated, which can be the case for Items with some forms of two-factor authentication.  `background` - Item can be updated in the background  `user_present_required` - Item requires user interaction to be updated
    */
    'updateType': Item.UpdateTypeEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "itemId",
            "baseName": "item_id",
            "type": "string"
        },
        {
            "name": "institutionId",
            "baseName": "institution_id",
            "type": "string"
        },
        {
            "name": "webhook",
            "baseName": "webhook",
            "type": "string"
        },
        {
            "name": "error",
            "baseName": "error",
            "type": "Error"
        },
        {
            "name": "availableProducts",
            "baseName": "available_products",
            "type": "Array<Products>"
        },
        {
            "name": "billedProducts",
            "baseName": "billed_products",
            "type": "Array<Products>"
        },
        {
            "name": "products",
            "baseName": "products",
            "type": "Array<Products>"
        },
        {
            "name": "consentExpirationTime",
            "baseName": "consent_expiration_time",
            "type": "Date"
        },
        {
            "name": "updateType",
            "baseName": "update_type",
            "type": "Item.UpdateTypeEnum"
        }    ];

    static getAttributeTypeMap() {
        return super.getAttributeTypeMap().concat(Item.attributeTypeMap);
    }
}

export namespace Item {
    export enum UpdateTypeEnum {
        Background = <any> 'background',
        UserPresentRequired = <any> 'user_present_required'
    }
}
